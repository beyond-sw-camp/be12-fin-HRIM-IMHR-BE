pipeline {
    agent any

    environment {
        IMAGE_NAME = 'imhrkr/batch-api'
        IMAGE_TAG  = "1.${BUILD_NUMBER}"
    }

    stages {

        stage('Clean up directory') {
            steps {
                script {
                    sh 'rm -rf ./* ./.git'
                }
            }
        }

        stage('Clone Repository') {
            steps {
                echo "Cloning Repository..."
                git branch: 'main', url: 'https://github.com/beyond-sw-camp/be12-fin-HRIM-IMHR-BE.git'
            }
        }

        stage('Check cloned files') {
            steps {
                sh 'ls -al'
            }
        }

        stage('Check gradle wrapper') {
            steps {
                sh 'ls -al batch-api/gradle/wrapper'
            }
        }

        stage('Build') {
            steps {
                dir('batch-api') {
                    sh 'chmod +x gradlew'
                    sh './gradlew clean build --refresh-dependencies -x test'
                }
            }
        }

        stage('Docker Build & Push') {
            steps {
                dir('batch-api') {
                    withCredentials([usernamePassword(credentialsId: 'IMHR_DOCKER_HUB', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ."
                        sh "echo \$DOCKER_PASSWORD | docker login -u \$DOCKER_USERNAME --password-stdin"
                        sh "docker push ${IMAGE_NAME}:${IMAGE_TAG}"
                    }
                }
            }
        }

        stage('Edit Manifest') {
                    steps {
                        script{
                            def newVersion = "${IMAGE_TAG}"
                            echo "Editing Manifest..."

                            // 변경사항 초기화 (모든 변경 제거)
                            sh 'git reset --hard'
                            sh 'git clean -fd' // untracked 파일도 삭제

                            // 브랜치 강제 checkout
                            sh 'git fetch origin'
                            sh 'git checkout -B deploy/argo/cd origin/deploy/argo/cd'

                            dir('batch') {
                                def files = [
                                        "rankJob.yaml",
                                        "scoreJob.yaml",
                                        "memberJob.yaml"
                                ]
                                files.each { file ->
                                    sh "sed -i 's|image: imhrkr/batch-api:[0-9.]*|image: ${IMAGE_NAME}:${IMAGE_TAG}|g' ${file}"
                                }

                                // 변경된 파일 git add
                                sh "git add ${files.join(' ')}"
                            }

                        }
                    }
                }

        stage('Update YAML and Push to Git') {
            steps {
                script {

                    withCredentials([
                        usernamePassword(credentialsId: 'IUCH_GIT', usernameVariable: 'GITHUB_USERNAME', passwordVariable: 'GITHUB_PASSWORD'),
                        string(credentialsId: 'IMHR_GIT_URL', variable: 'GITHUB_URL')
                    ]) {


                        sh """
                          if ! git diff --cached --quiet; then
                            git commit -m "[Deploy] v1.${BUILD_NUMBER} 배포"
                            git remote set-url origin https://${GITHUB_USERNAME}:${GITHUB_PASSWORD}@${GITHUB_URL}
                            git push origin deploy/argo/cd
                          else
                            echo "No changes to commit."
                          fi
                        """

                    }
                }
            }
        }
    }
}